
**Binary Exploitation Series (7): Full RelRO Bypass**
https://made0x78.com/bseries-fullrelro/

**Ret2Reg attack**
http://slayne.github.io/2016/02/17/stack7/
https://dl.packetstormsecurity.net/papers/attack/lewt2-aslrbypass.pdf

**Open Security Training — Introduction to Software Exploits — Uninitialized Variable Overflow**
https://iphelix.medium.com/open-security-training-introduction-to-software-exploits-uninitialized-variable-overflow-811a7cd75bd8

**Reverse-engineering: Using Linux GDB**
https://medium.com/@rickharris_dev/reverse-engineering-using-linux-gdb-a99611ab2d32

**HACKNDO**
https://beta.hackndo.com/introduction-a-gdb/
https://beta.hackndo.com/assembly-basics/
https://beta.hackndo.com/buffer-overflow/

**OpenSecurityTraining**
https://opensecuritytraining.info/Exploits1.html

**TutoAsm**
https://asmtutor.com

**Cours Polytech**
https://arxiv.org/pdf/cs/0405073.pdf

**x86 Assembly Guide**
https://www.cs.virginia.edu/~evans/cs216/guides/x86.html

**Intro ASM**
http://www.courstechinfo.be/Programmation/IntroASM.html

**Modern Binary Exploitation**
http://security.cs.rpi.edu/courses/binexp-spring2015/
http://security.cs.rpi.edu/courses/binexp-spring2015/lectures/17/10_lecture.pdf

**Medium Exploit Exercises**
https://iphelix.medium.com/exploit-exercises-protostar-stack-levels-20185be250ad
>> level 2 = stack 6

https://connect.ed-diamond.com/MISC/MISC-062/La-securite-applicative-sous-Linux

NX : bit 63 initialisé à 1 pour rendre la pile et le tas d'un programme non executable

https://owasp.org/www-community/attacks/Format_string_attack

https://csl.com.co/en/off-by-one-explained/

https://owasp.org/www-community/vulnerabilities/Buffer_Overflow

https://en.wikipedia.org/wiki/Heap_overflow
